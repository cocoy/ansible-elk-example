- shell: if [ -e /opt/kibana-{{ kibana_version }}-{{ kibana_platform }} ]; then echo yes; else echo no; fi;
  register: version_exists
  always_run: True

- name: Download kibana zip
  get_url:
    url: https://download.elastic.co/kibana/kibana/kibana-{{ kibana_version }}-{{ kibana_platform }}.zip
    dest: /tmp
  when: version_exists.stdout == 'no'

- name: Unarchive kibana zip
  unarchive:
    src: /tmp/kibana-{{ kibana_version }}-{{ kibana_platform }}.zip
    dest: /opt
    copy: no
  when: version_exists.stdout == 'no'

- name: Remove old kibana folder link
  file: path=/opt/kibana state=absent
  when: version_exists.stdout == 'no'

- name: Link new kibana folder
  file:
    dest: /opt/kibana
    src: /opt/kibana-{{ kibana_version }}-{{ kibana_platform }}
    state: link
    force: yes
  when: version_exists.stdout == 'no'
  notify: restart kibana

- name: Download kibana start script
  get_url: url=https://gist.githubusercontent.com/thisismitch/8b15ac909aed214ad04a/raw/bce61d85643c2dcdfbc2728c55a41dab444dca20/kibana4 dest=/etc/init.d

- name: Setup start script attrs
  file: path=/etc/init.d/kibana4 owner=root group=root mode=0755

- name: Configuring Kibana
  template: src=kibana.yml.j2 dest=/opt/kibana/config/kibana.yml owner=root group=root mode=0644
  notify: restart kibana

- include: nginx.yml
